#!/bin/sh

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
[ -e $RESOLV_CONF ] || touch $RESOLV_CONF

# Handle stateful DHCPv6 like DHCPv4
[ -n "$ipv6" ] && ip="$ipv6/128"

if [ -z "${IF_WAIT_DELAY}" ]; then
	IF_WAIT_DELAY=10
fi

wait_for_ipv6_default_route() {
	printf "Waiting for IPv6 default route to appear"
	while [ $IF_WAIT_DELAY -gt 0 ]; do
		if [ -z "$(ip -6 route list | grep default)" ]; then
			printf "\n"
			return
		fi
		sleep 1
		printf "."
		: $((IF_WAIT_DELAY -= 1))
	done
	printf " timeout!\n"
}

case "$1" in
	deconfig)
		/sbin/ip link set dev $interface up
		/sbin/ip addr flush dev $interface

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -c $interface && /usr/sbin/avahi-autoipd -k $interface
		fi
		;;

	leasefail|nak)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -c $interface || /usr/sbin/avahi-autoipd -wD $interface --no-chroot
		fi
		;;

	renew|bound)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -c $interface && /usr/sbin/avahi-autoipd -k $interface
		fi

		echo "Received IP address ${ip}/${subnet} for interface ${interface}"
		if [ -n "${broadcast}" ] ; then
			/sbin/ip addr add ${ip}/${subnet} dev ${interface}
			"Set broadcast address to ${broadcast}"
			/sbin/ip addr add broadcast ${broadcast} dev ${interface}
		else
			/sbin/ip addr add ${ip}/${subnet} brd + dev ${interface}
		fi

		if [ -n "$ipv6" ] ; then
			wait_for_ipv6_default_route
		fi

		if [ -n "${router}" ] ; then
			echo "deleting routers"
			while /sbin/ip route del default 2> /dev/null; do
				:
			done

			for i in ${router} ; do
				/sbin/ip route add default via ${i}
			done
		fi

		if [ -n "${hostname}" ] ; then
			echo "Setting hostname to ${hostname}"
			hostname ${hostname}
		fi

		if [ -n "${ntpsrv}" ] ; then
			# Check if ntpd exists and if it's not running, start it
			killall -q -0 ntpd || /usr/sbin/ntpd -p ${ntpsrv}
		fi

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		# prefer rfc3397 domain search list (option 119) if available
		if [ -n "${search}" ]; then
			search_list=${search}
		elif [ -n "${domain}" ]; then
			search_list=${domain}
		fi

		[ -n "${search_list}" ] &&
			echo "search ${search_list} # $interface" >> $RESOLV_CONF

		for i in $dns ; do
			echo "Adding DNS ${i}"
			echo "nameserver ${i} # $interface" >> $RESOLV_CONF
		done
		;;
esac

HOOK_DIR="${0}.d"
for hook in "${HOOK_DIR}/"*; do
    [ -f "${hook}" -a -x "${hook}" ] || continue
    "${hook}" "${@}"
done

exit 0
